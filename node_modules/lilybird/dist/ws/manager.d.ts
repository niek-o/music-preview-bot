import type { UpdatePresenceStructure, ReceiveDispatchEvent, DebugFunction } from "../typings/index.js";
interface ManagerOptions {
    token?: string;
    intents: number;
    presence?: UpdatePresenceStructure;
}
export type DispatchFunction = (data: ReceiveDispatchEvent) => any;
export declare class WebSocketManager {
    #private;
    readonly resumeInfo: {
        url: string;
        id: string;
    };
    constructor(options: ManagerOptions, dispatch: DispatchFunction, debug?: DebugFunction);
    close(): void;
    connect(url?: string): Promise<void>;
    ping(): Promise<number>;
    updatePresence(presence: UpdatePresenceStructure): void;
    set options(options: Partial<ManagerOptions>);
    get options(): ManagerOptions;
}
export {};
//# sourceMappingURL=manager.d.ts.map