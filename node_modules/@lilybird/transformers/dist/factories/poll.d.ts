import { Message } from "./message.js";
import { User } from "./user.js";
import type { Poll as LilyPoll, PollLayoutType, Client } from "lilybird";
export declare class PollAnswer {
    readonly channelId: string;
    readonly messageId: string;
    readonly id: number;
    readonly media: LilyPoll.MediaStructure;
    readonly client: Client;
    constructor(client: Client, channelId: string, messageId: string, answer: LilyPoll.AnswerStructure);
    fetchVoters(params?: {
        after?: string;
        limit?: number;
    }): Promise<Array<User>>;
}
export declare class Poll {
    readonly channelId: string;
    readonly messageId: string;
    readonly question: LilyPoll.MediaStructure;
    readonly answers: Array<PollAnswer>;
    readonly expiresTimestamp: Date | undefined;
    readonly allowMultiselect: boolean;
    readonly layoutType: PollLayoutType;
    readonly results: LilyPoll.ResultStructure | undefined;
    readonly client: Client;
    constructor(client: Client, channelId: string, messageId: string, poll: LilyPoll.Structure);
    end(): Promise<Message>;
}
//# sourceMappingURL=poll.d.ts.map